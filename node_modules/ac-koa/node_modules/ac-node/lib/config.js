var _ = require('lodash');
var os = require('os');
var inflection = require('inflection');

var env = process.env;

module.exports = function (json, env) {

  json = json || {};
  env = env || process.env;
  var nodeEnv = env.NODE_ENV || 'development';

  function walk(config, visitor) {
    var type = typeof config;
    if (type === 'object') {
      if (config instanceof Array) {
        return config.map(function (el) {
          return walk(el, visitor);
        });
      }
      return _.object(_.keys(config).map(function (key) {
        var value = config[key];
        return visitor(key, walk(value, visitor));
      }));
    }
    return config;
  }

  function generate(config) {
    return walk(config, function (key, value) {
      key = inflection.underscore(key).toUpperCase();
      if (typeof value !== 'object') {
        value = env[key] || value;
      }
      return [key, generate(value)];
    });
  }

  function replace(config) {
    return walk(config, function (key, value) {
      if (typeof value === 'string') {
        value = value.replace(/\$\{(\w+)\}|\$(\w+)/g, function ($0, $1, $2) {
          return config[$1 ? $1 : $2];
        });
      }
      return [key, value];
    });
  }

  return replace(generate(_.extend({
    hostname: os.hostname().toLowerCase(),
    port: 3000,
    localBaseUrl: 'http://$HOSTNAME:$PORT'
  }, json[nodeEnv])));

};
